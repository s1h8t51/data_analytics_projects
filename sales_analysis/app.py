{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7396860a-057b-40bf-a29b-9afd52e57bdc",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# --- Load your data ---\n",
    "df = pd.read_csv('corrected_data.csv')\n",
    "\n",
    "# --- Set Streamlit page config ---\n",
    "st.set_page_config(page_title=\"Sales Dashboard\", layout=\"wide\")\n",
    "\n",
    "st.title(\"Sales & Customer Analytics Dashboard\")\n",
    "\n",
    "st.header(\"1. Number of Customers per Sales Method\")\n",
    "customer_count = df.groupby('sales_method')['customer_id'].nunique()\n",
    "fig1, ax1 = plt.subplots()\n",
    "customer_count.plot(kind='bar', ax=ax1, color=sns.color_palette('Set2'))\n",
    "ax1.set_ylabel('Number of Customers')\n",
    "ax1.set_xlabel('Sales Method')\n",
    "st.pyplot(fig1)\n",
    "\n",
    "st.header(\"2. Revenue Distribution by Customer Segment\")\n",
    "fig2, ax2 = plt.subplots()\n",
    "sns.histplot(data=df, x='revenue', hue='sales_method', multiple='stack', ax=ax2, kde=True)\n",
    "ax2.set_xlabel('Revenue')\n",
    "ax2.set_ylabel('Customer Count')\n",
    "st.pyplot(fig2)\n",
    "\n",
    "st.header(\"3. Total Revenue by Sales Method\")\n",
    "revenue_by_method = df.groupby('sales_method')['revenue'].sum().sort_values(ascending=False)\n",
    "fig3, ax3 = plt.subplots()\n",
    "revenue_by_method.plot(kind='bar', ax=ax3, color=sns.color_palette('Set1'))\n",
    "ax3.set_ylabel('Total Revenue')\n",
    "ax3.set_xlabel('Sales Method')\n",
    "st.pyplot(fig3)\n",
    "\n",
    "st.header(\"4. Weekly Revenue by Sales Method\")\n",
    "# Assuming you have a 'date' or 'week' column; otherwise, this will need to be adjusted\n",
    "if 'date' in df.columns:\n",
    "    df['date'] = pd.to_datetime(df['date'])\n",
    "    df['week'] = df['date'].dt.isocalendar().week\n",
    "    weekly_revenue = df.groupby(['week', 'sales_method'])['revenue'].sum().reset_index()\n",
    "    fig4, ax4 = plt.subplots(figsize=(10,5))\n",
    "    sns.lineplot(data=weekly_revenue, x='week', y='revenue', hue='sales_method', marker='o', ax=ax4)\n",
    "    ax4.set_ylabel('Weekly Revenue')\n",
    "    ax4.set_xlabel('Week Number')\n",
    "    st.pyplot(fig4)\n",
    "else:\n",
    "    st.warning(\"No 'date' column found for weekly revenue visualization.\")\n",
    "\n",
    "st.header(\"5. Distribution of Customer Tenure by Sales Method\")\n",
    "if 'tenure' in df.columns:\n",
    "    fig5, ax5 = plt.subplots()\n",
    "    sns.boxplot(data=df, x='sales_method', y='tenure', ax=ax5, palette='Set3')\n",
    "    ax5.set_ylabel('Customer Tenure')\n",
    "    ax5.set_xlabel('Sales Method')\n",
    "    st.pyplot(fig5)\n",
    "else:\n",
    "    st.warning(\"No 'tenure' column found for tenure distribution visualization.\")\n",
    "\n",
    "st.header(\"6. Number of Website Visits by Sales Method\")\n",
    "if 'website_visits' in df.columns:\n",
    "    website_visits = df.groupby('sales_method')['website_visits'].sum()\n",
    "    fig6, ax6 = plt.subplots()\n",
    "    website_visits.plot(kind='bar', ax=ax6, color=sns.color_palette('Paired'))\n",
    "    ax6.set_ylabel('Number of Website Visits')\n",
    "    ax6.set_xlabel('Sales Method')\n",
    "    st.pyplot(fig6)\n",
    "else:\n",
    "    st.warning(\"No 'website_visits' column found.\")\n",
    "\n",
    "st.markdown(\"---\")\n",
    "st.caption(\"Dashboard powered by Streamlit. Built by ChatGPT for your dataset.\")\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
